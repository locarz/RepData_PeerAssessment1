results.2015.09.14.194213.csv <- read.csv("~/Downloads/results-2015-09-14-194213.csv.txt")
View(results.2015.09.14.194213.csv)
summary(results.2015.09.14.194213.csv)
myresults <- read.csv("~/Downloads/results-2015-09-21-083738.csv.txt");
summary(myresults)
my2results <- read.csv("~/Downloads/results-2015-09-21-083738.csv.txt");
results.2015.09.14.194213.csv <- read.csv("~/Downloads/results-2015-09-14-194213.csv.txt")
View(results.2015.09.14.194213.csv)
summary(results.2015.09.14.194213.csv)
setwd("~/coursera/my work/repodata/p1")
unzip(zipfile="activity.zip")
mydata <- read.csv("activity.csv")
summary(mydata)
library(ggplot2)
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
library(ggplot2)
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
total.steps <- tapply(mydata$steps, data$date, FUN=sum, na.rm=TRUE)
total.steps <- tapply(mydata$steps, mydata$date, FUN=sum, na.rm=TRUE)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
summary(total.steps)
head(total.steps)
head(total.steps,20)
mean(total.steps)
mean(mydata)
mean(mydata$steps)
head(mydata)
head(mydata, na.rm=true)
mean(mydata, na.rm=true)
mean(mydata, na.rm=TRUE)
mean(mydata$steps, na.rm=TRUE)
mean(total.steps)
head(mydata$steps, 50)
head(mydata$steps, 500)
head(mydata$steps, 5000)
total.steps <- tapply(mydata$steps, mydata$date, FUN=sum, na.rm="TRUE")
qplot(total.steps, binwidth=1000, xlab="Total steps per day")
qplot(total.steps, binwidth=1000, xlab="Total steps per day")
qplot(total.steps, binwidth=100, xlab="Total steps per day")
qplot(total.steps, xlab="Total steps per day")
qplot(total.steps, binwidth=30, xlab="Total steps per day")
qplot(total.steps, binwidth=500, xlab="Total steps per day")
qplot(total.steps, binwidth=5000, xlab="Total steps per day")
qplot(total.steps, binwidth=50, xlab="Total steps per day")
qplot(total.steps, binwidth=250, xlab="Total steps per day")
qplot(total.steps, binwidth=400, xlab="Total steps per day")
mean(total.steps, na.rm="TRUE")
median(total.steps, na.rm="TRUE")
FUN=mean, na.rm=TRUE)
averages <- aggregate(x=list(steps=mydata$steps), by=list(interval=mydata$interval), FUN=mean, na.rm=TRUE)
head(averages)
myaverages <- aggregate(x=list(steps=mydata$steps), by=list(interval=mydata$interval), FUN=mean, na.rm=TRUE)
head(myaverages, 50)
aggregate?
aggregate
? aggregate
myaverages <- aggregate(x=data(steps=mydata$steps), by=data(interval=mydata$interval), FUN=mean, na.rm=TRUE)
?list
myaverages <- aggregate(x=list(steps=mydata$steps), by=list(interval=mydata$interval), FUN=mean, na.rm=TRUE)
myaverage <- aggregate(x=list(steps=mydata$steps), by=list(interval=mydata$interval), FUN=mean, na.rm=TRUE)
ggplot(data=myaverage, aes(x=interval, y=steps)) geom_line() xlab("5-Min Interval") ylab("Average # of Steps")
ggplot(data=myaverage, aes(x=interval, y=steps)) , geom_line() , xlab("5-Min Interval") , ylab("Average # of Steps")
ggplot(data=myaverage, aes(x=interval, y=steps))
ggplot(data=myaverage, aes(x=interval, y=steps) geom_line() , xlab("5-Min Interval") , ylab("Average # of Steps")
ggplot(data=myaverage, aes(x=interval, y=steps)) geom_line() , xlab("5-Min Interval") , ylab("Average # of Steps")
ggplot(data=myaverage, aes(x=interval, y=steps)) geom_line() xlab("5-Min Interval") ylab("Average # of Steps")
ggplot(data=myaverage, aes(x=interval, y=steps)) geom_line() xlab("5-Min Interval") ylab("Average # of Steps")
?ggplot
ggplot(data=myaverage, aes(x=interval, y=steps)) + geom_line() + xlab("5-Min Interval") + ylab("Average # of Steps")
averages[which.max(myaverage$steps),]
?averages
average[which.max(myaverage$steps),]
myaverage[which.max(myaverage$steps),]
which.max(myaverage$steps)
which.min(myaverage$steps)
?whichmax
?which.max
which.max(myaverage$steps)
myaverate[which.max(myaverage$steps)]
myaverage[which.max(myaverage$steps)]
myaverage[which.max(myaverage$steps), ]
myaverage[which.max(myaverage$steps), steps ]
myaverage[which.max(myaverage$steps),,]
myaverage[which.max(myaverage$steps),,,]
myaverage[which.max(myaverage$steps),,]
my.data <- read.csv("activity.csv")
my.dataset <- read.csv("activity.csv")
total.steps <- tapply(my.dataset$steps, my.dataset$date, FUN=sum, na.rm="TRUE")
my.average <- aggregate(x=list(steps=my.dataset$steps), by=list(interval=my.dataset$interval), FUN=mean, na.rm=TRUE)
missing.values <- is.na(my.dataset$steps)
table(missing.values)
head(missing.values)
?table
table(missing.values,true)
table(missing.values)
missing.values.mask <- is.na(my.dataset$steps)
table(missing.values.mask) ["TRUE"]
head(missing.values.mask, 500)
head(my.dataset, 500)
table(missing.values.mask) ["TRUE"]
number.of.missing.values <- table(missing.values.mask) ["TRUE"]
head(number.of.missing.values)
attributes(number.of.missing.values)
number.of.missing.values <- count(missing.values.mask) ["TRUE"]
number.of.missing.values
number.of.missing.values$1
number.of.missing.values$TRUE
number.of.missing.values[TRUE]
number.of.missing.values[false]
number.of.missing.values[]
number.of.missing.values[,]
number.of.missing.values[TRUE,]
number.of.missing.values[,]
number.of.missing.values(2)
number.of.missing.values($2)
number.of.missing.values([2])
number.of.missing.values
number.of.missing.values$a
number.of.missing.values$
,
number.of.missing.values
str(number.of.missing.values)
names(number.of.missing.values)
number.of.missing.values[TRUE]
total.steps <- tapply(my.dataset$steps, my.dataset$date, sum, na.rm="TRUE")
my.average <- aggregate(x=list(steps=my.dataset$steps), by=list(interval=my.dataset$interval), mean, na.rm=TRUE)
length(number.of.missing.values[TRUE])
my.new.dataset <- my.dataset
qplot(total.steps, binwidth=400, xlab="Total steps per day")
ggplot(total.steps, binwidth=400, xlab="Total steps per day")
?na.rm
?tapply
head(my.new.dataset)
for (i in 1:nrow(my.newataset)) {
if (is.na(my.newdataset$steps[i])) {
my.newdataset$steps[i] <- avgSteps[which(my.newdataset$interval[i] == avgSteps$interval), ]$meanOfSteps
}
}
for (i in 1:nrow(my.new.dataset)) {
if (is.na(my.new.dataset$steps[i])) {
my.new.dataset$steps[i] <- avgSteps[which(my.new.dataset$interval[i] == avgSteps$interval), ]$meanOfSteps
}
}
for (i in 1:nrow(my.new.dataset)) {
if (is.na(my.new.dataset$steps[i])) {
my.new.dataset$steps[i] <- my.average[which(my.new.dataset$interval[i] == my.average$interval), ]$meanOfSteps
}
}
for (i in 1:nrow(my.new.dataset)) {
if (is.na(my.new.dataset$steps[i])) {
my.new.dataset$steps[i] <- my.average[which(my.new.dataset$interval[i] == my.average$interval), ]$meanOfSteps
}
}
my.average[which.max(my.average$steps),,]
for (i in 1:nrow(my.new.dataset)) {
if (is.na(my.new.dataset$steps[i])) {
my.new.dataset$steps[i] <- my.average[which(my.new.dataset$interval[i] == my.average$interval), ]$average.of.steps
}
}
sum(number.of.missing.values)
number.of.missing.values <- table(missing.values.mask) ["TRUE"]
head(number.of.missing.values)
sum(missing.values.mask)
my.dataset <- read.csv("activity.csv")
my.average <- aggregate(x=list(steps=my.dataset$steps), by=list(interval=my.dataset$interval), mean, na.rm=TRUE)
head(my.average)
head(my.average,30)
my.new.dataset < my.dataset
my.new.dataset <- my.dataset
for (i in 1:nrow(my.new.dataset)) {
if (is.na(my.new.dataset$steps[i])) {
my.new.dataset$steps[i] <- my.average[which(my.new.dataset$interval[i] == my.average$interval), ]$meanOfSteps
}
}
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps) else filled <- (averages[averages$interval == interval, "steps"])
return(filled)
}
my.new.dataset$steps <- mapply(fill.value, my.new.dataset$steps, my.new.dataset$interval)
my.new.dataset$steps <- mapply(fill.value, my.new.dataset$steps, my.new.dataset$interval)
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps) else filled <- (my.averages[my.averages$interval == interval, "steps"])
return(filled)
}
my.new.dataset$steps <- mapply(fill.value, my.new.dataset$steps, my.new.dataset$interval)
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps) else filled <- (my.average[my.average$interval == interval, "steps"])
return(filled)
}
my.new.dataset$steps <- mapply(fill.value, my.new.dataset$steps, my.new.dataset$interval)
head(my.new.dataset)
average.value <- function(steps, interval) {
replacement <- NA
if (!is.na(steps))
replacement <- c(steps) else replacement <- (my.average[my.average$interval == interval, "steps"])
return(replacement)
}
my.new.dataset$steps <- mapply(average.value, replacement$steps, replacement$interval)
my.new.dataset$steps <- mapply(average.value, my.new.dataset$steps, my.new.dataset$interval)
my.dataset <- read.csv("activity.csv")
my.average <- aggregate(x=list(steps=my.dataset$steps), by=list(interval=my.dataset$interval), mean, na.rm=TRUE)
my.new.dataset < my.dataset
my.new.dataset <- my.dataset
average.value <- function(steps, interval) {
replacement <- NA
if (!is.na(steps))
replacement <- c(steps) else replacement <- (my.average[my.average$interval == interval, "steps"])
return(replacement)
}
my.new.dataset$steps <- mapply(average.value, my.new.dataset$steps, my.new.dataset$interval)
head(my.new.dataset)
head(my.dataset)
total.new.steps <- tapply(my.new.dataset$steps, my.new.dataset$date, sum, na.rm="TRUE")
qplot(total.new.steps, binwidth=400, xlab="Total steps per day")
mean(total.new.steps, na.rm="TRUE")
median(total.new.steps, na.rm="TRUE"
)
median(total.steps, na.rm="TRUE")
?replacement
replacement
?function
()
?function()
average.value <- function(steps, interval) {
newval <- NA
if (!is.na(steps))
newval <- c(steps) else newval <- (my.average[my.average$interval == interval, "steps"])
return(newval)
}
my.new.dataset$steps <- mapply(average.value, newval$steps, newval$interval)
my.dataset <- read.csv("activity.csv")
total.steps <- tapply(my.dataset$steps, my.dataset$date, sum, na.rm="TRUE")
my.average <- aggregate(x=list(steps=my.dataset$steps), by=list(interval=my.dataset$interval), mean, na.rm="TRUE")
my.average[which.max(my.average$steps),,]
average.value <- function(steps, interval) {
newval <- NA
if (!is.na(steps))
newval <- c(steps) else newval <- (my.average[my.average$interval == interval, "steps"])
return(newval)
}
my.new.dataset$steps <- mapply(average.value, newval$steps, newval$interval)
average.value <- function(steps, interval) {
replacement <- NA
if (!is.na(steps))
replacement <- c(steps) else replacement <- (my.average[my.average$interval == interval, "steps"])
return(replacement)
my.new.dataset$steps <- mapply(average.value, replacement$steps, replacement$interval)
my.dataset <- read.csv("activity.csv")
total.steps <- tapply(my.dataset$steps, my.dataset$date, sum, na.rm="TRUE")
my.dataset <- read.csv("activity.csv")
.
)
my.dataset <- read.csv("activity.csv")
total.steps <- tapply(my.dataset$steps, my.dataset$date, sum, na.rm="TRUE")
my.average <- aggregate(x=list(steps=my.dataset$steps), by=list(interval=my.dataset$interval), mean, na.rm="TRUE")
my.new.dataset <- my.dataset
my.new.dataset$steps <- impute(my.dataset$steps, fum=mean)
?impute
??impute
